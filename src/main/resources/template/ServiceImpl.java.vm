package ${package}.service.impl.${moduleName};

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import ${package}.entity.${moduleName}.${className};
import ${package}.mapper.${moduleName}.${className}Mapper;
import ${package}.service.${moduleName}.${className}Service;

/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@Service("${classname}Service")
public class ${className}ServiceImpl extends ServiceImpl<${className}Mapper, ${className}> implements ${className}Service {
    @Autowired
    private ${className}Mapper ${classname}Mapper;

    @Override
    public ${className} getById(Long id) {
        ${className} ${classname} = ${classname}Mapper.getById(id);
        return ${classname};
    }

    @Override
    public List<${className}> selectByCondition(${className} ${classname}) {
        return ${classname}Mapper.selectByCondition(${classname});
    }

    @Transactional(rollbackFor = Exception.class)
    @Override
    public ${className} save(${className} ${classname}) {
        ${classname}Mapper.insert(${classname});
        return ${classname};
    }

    @Transactional(rollbackFor = Exception.class)
    @Override
    public ${className} updateById(${className} ${classname}) {
        ${classname}Mapper.update(${classname});
        return ${classname};
    }

    @Override
    public boolean removeById(Long id) {
        return ${classname}Mapper.deleteById(id) > 0;
    }

    @Transactional(rollbackFor = Exception.class)
    @Override
    public boolean removeByIds(List<Long> idList) {
        return ${classname}Mapper.deleteBatchIds(idList) > 0;
    }
}
